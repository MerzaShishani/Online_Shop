// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Online_Shop.Data;

#nullable disable

namespace Online_Shop.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Online_Shop.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Vegetables",
                            Description = "Fresh delicious Tomato.",
                            ImageUrl = "https://img.freepik.com/free-photo/fresh-red-tomatoes_2829-13449.jpg?w=826&t=st=1675614718~exp=1675615318~hmac=c2bdc29fdcea351ff75bacfbc917a168e497461ec1804ddd2d0fde8178eac8c1",
                            Name = "Tomato",
                            Price = 0.40000000000000002
                        },
                        new
                        {
                            Id = 2,
                            Category = "Vegetables",
                            Description = "Fresh Potato.",
                            ImageUrl = "https://img.freepik.com/free-photo/rustic-unpeeled-potatoes-table_144627-3925.jpg?w=1060&t=st=1675614905~exp=1675615505~hmac=793f3a2c1cb7e5ac89ce5ac5f2607d604bf826b21912fb0bff8a723f535386a9",
                            Name = "Potato",
                            Price = 0.69999999999999996
                        },
                        new
                        {
                            Id = 3,
                            Category = "Bakery",
                            Description = "Daily baked Bread.",
                            ImageUrl = "https://img.freepik.com/free-photo/homemade-crunchy-bread-with-grains_144627-362.jpg?w=900&t=st=1675615019~exp=1675615619~hmac=b53b74310754008c820d261d82db8c728e95b135fc8afedd5a0f27f3d3e94446",
                            Name = "Bread",
                            Price = 0.5
                        },
                        new
                        {
                            Id = 4,
                            Category = "Bakery",
                            Description = "Daily baked Cake.",
                            ImageUrl = "https://img.freepik.com/free-photo/dessert-fruitcake_144627-10487.jpg?w=1060&t=st=1675615714~exp=1675616314~hmac=874ceff2453cf3a9f6afe33ee1b2b342dd192fa400992b2da92e696be60e87b3",
                            Name = "Cake",
                            Price = 4.0
                        },
                        new
                        {
                            Id = 5,
                            Category = "Fruits",
                            Description = "Fresh orange",
                            ImageUrl = "https://img.freepik.com/free-photo/cut-whole-orange-fruits-with-green-leaves_74855-5380.jpg?w=1060&t=st=1675615765~exp=1675616365~hmac=5041a96046676f57f07495bd30c0da3ed08fbc7cb862c508f3b7103b845f472a",
                            Name = "Orange",
                            Price = 1.5
                        },
                        new
                        {
                            Id = 6,
                            Category = "Fruits",
                            Description = "Fresh Apple",
                            ImageUrl = "https://img.freepik.com/free-photo/apples-red-fresh-mellow-juicy-perfect-whole-white-desk_179666-271.jpg?w=1060&t=st=1675615812~exp=1675616412~hmac=9f78977f6265c61c89386c6ab4fb3b4acbe3d58e84c1d2414f2f7ba0db05a81f",
                            Name = "Apple",
                            Price = 1.2
                        },
                        new
                        {
                            Id = 7,
                            Category = "Fruits",
                            Description = "Fresh Strawberry",
                            ImageUrl = "https://img.freepik.com/free-photo/red-fresh-strawberries-with-green-leaves_114579-10506.jpg?w=1060&t=st=1675615838~exp=1675616438~hmac=819b621145b32e08c8de8361c9d988c96d3a7f108c9e7da615e0974038850cdb",
                            Name = "Strawberry",
                            Price = 1.1000000000000001
                        },
                        new
                        {
                            Id = 8,
                            Category = "Clothes",
                            Description = "White Shirt.",
                            ImageUrl = "https://img.freepik.com/free-photo/white-t-shirts-with-copy-space-gray-background_53876-104920.jpg?w=1060&t=st=1675615107~exp=1675615707~hmac=6ec76c9f8f3efee7e124f69cfbf50a8686b77add425996311727cf9ee3c4dac3",
                            Name = "White Shirt",
                            Price = 15.0
                        },
                        new
                        {
                            Id = 9,
                            Category = "Clothes",
                            Description = "Pink Sneaker.",
                            ImageUrl = "https://img.freepik.com/free-photo/sport-running-shoes_1203-3414.jpg?w=1060&t=st=1675615218~exp=1675615818~hmac=1cae061fb4dce8f73da4f955ef38f2548634c40e2adfdf04dceb58006e5c9999",
                            Name = "Pink Sneakers",
                            Price = 50.0
                        },
                        new
                        {
                            Id = 10,
                            Category = "Clothes",
                            Description = "Men Sneakers",
                            ImageUrl = "https://img.freepik.com/free-photo/fashion-shoes-sneakers_1203-7528.jpg?w=1060&t=st=1675615295~exp=1675615895~hmac=df919a47aa54af4a9249f77540bd9c7b88c303651434dd039dd25fafdcdc0cc1",
                            Name = "Men Sneakers",
                            Price = 60.0
                        });
                });

            modelBuilder.Entity("Online_Shop.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            Password = "admin",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "user@example.com",
                            Password = "user",
                            Role = "User",
                            Username = "user"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
